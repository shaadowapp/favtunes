{
  "formatVersion": 1,
  "database": {
    "version": 24,
    "identityHash": "92bdf4eea1b65073169f7a37657fd330",
    "entities": [
      {
        "tableName": "Song",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `title` TEXT NOT NULL, `artistsText` TEXT, `durationText` TEXT, `thumbnailUrl` TEXT, `likedAt` INTEGER, `totalPlayTimeMs` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "artistsText",
            "columnName": "artistsText",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "durationText",
            "columnName": "durationText",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnailUrl",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "likedAt",
            "columnName": "likedAt",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "totalPlayTimeMs",
            "columnName": "totalPlayTimeMs",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "SongPlaylistMap",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`songId` TEXT NOT NULL, `playlistId` INTEGER NOT NULL, `position` INTEGER NOT NULL, PRIMARY KEY(`songId`, `playlistId`), FOREIGN KEY(`songId`) REFERENCES `Song`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`playlistId`) REFERENCES `Playlist`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "playlistId",
            "columnName": "playlistId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "songId",
            "playlistId"
          ]
        },
        "indices": [
          {
            "name": "index_SongPlaylistMap_songId",
            "unique": false,
            "columnNames": [
              "songId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SongPlaylistMap_songId` ON `${TABLE_NAME}` (`songId`)"
          },
          {
            "name": "index_SongPlaylistMap_playlistId",
            "unique": false,
            "columnNames": [
              "playlistId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SongPlaylistMap_playlistId` ON `${TABLE_NAME}` (`playlistId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Song",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "songId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "Playlist",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "playlistId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "Playlist",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `browseId` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "browseId",
            "columnName": "browseId",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "Artist",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT, `thumbnailUrl` TEXT, `timestamp` INTEGER, `bookmarkedAt` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnailUrl",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "bookmarkedAt",
            "columnName": "bookmarkedAt",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "SongArtistMap",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`songId` TEXT NOT NULL, `artistId` TEXT NOT NULL, PRIMARY KEY(`songId`, `artistId`), FOREIGN KEY(`songId`) REFERENCES `Song`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`artistId`) REFERENCES `Artist`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "artistId",
            "columnName": "artistId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "songId",
            "artistId"
          ]
        },
        "indices": [
          {
            "name": "index_SongArtistMap_songId",
            "unique": false,
            "columnNames": [
              "songId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SongArtistMap_songId` ON `${TABLE_NAME}` (`songId`)"
          },
          {
            "name": "index_SongArtistMap_artistId",
            "unique": false,
            "columnNames": [
              "artistId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SongArtistMap_artistId` ON `${TABLE_NAME}` (`artistId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Song",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "songId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "Artist",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "artistId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "Album",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `title` TEXT, `thumbnailUrl` TEXT, `year` TEXT, `authorsText` TEXT, `shareUrl` TEXT, `timestamp` INTEGER, `bookmarkedAt` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnailUrl",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "year",
            "columnName": "year",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "authorsText",
            "columnName": "authorsText",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "shareUrl",
            "columnName": "shareUrl",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "bookmarkedAt",
            "columnName": "bookmarkedAt",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "SongAlbumMap",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`songId` TEXT NOT NULL, `albumId` TEXT NOT NULL, `position` INTEGER, PRIMARY KEY(`songId`, `albumId`), FOREIGN KEY(`songId`) REFERENCES `Song`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`albumId`) REFERENCES `Album`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "albumId",
            "columnName": "albumId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "songId",
            "albumId"
          ]
        },
        "indices": [
          {
            "name": "index_SongAlbumMap_songId",
            "unique": false,
            "columnNames": [
              "songId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SongAlbumMap_songId` ON `${TABLE_NAME}` (`songId`)"
          },
          {
            "name": "index_SongAlbumMap_albumId",
            "unique": false,
            "columnNames": [
              "albumId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_SongAlbumMap_albumId` ON `${TABLE_NAME}` (`albumId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Song",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "songId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "Album",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "albumId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "SearchQuery",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `query` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "query",
            "columnName": "query",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_SearchQuery_query",
            "unique": true,
            "columnNames": [
              "query"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_SearchQuery_query` ON `${TABLE_NAME}` (`query`)"
          }
        ]
      },
      {
        "tableName": "QueuedMediaItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `mediaItem` BLOB NOT NULL, `position` INTEGER)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mediaItem",
            "columnName": "mediaItem",
            "affinity": "BLOB",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "Format",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`songId` TEXT NOT NULL, `itag` INTEGER, `mimeType` TEXT, `bitrate` INTEGER, `contentLength` INTEGER, `lastModified` INTEGER, `loudnessDb` REAL, PRIMARY KEY(`songId`), FOREIGN KEY(`songId`) REFERENCES `Song`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "itag",
            "columnName": "itag",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mimeType",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "bitrate",
            "columnName": "bitrate",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "contentLength",
            "columnName": "contentLength",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "lastModified",
            "columnName": "lastModified",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "loudnessDb",
            "columnName": "loudnessDb",
            "affinity": "REAL"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "songId"
          ]
        },
        "foreignKeys": [
          {
            "table": "Song",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "songId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "Event",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `songId` TEXT NOT NULL, `timestamp` INTEGER NOT NULL, `playTime` INTEGER NOT NULL, FOREIGN KEY(`songId`) REFERENCES `Song`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playTime",
            "columnName": "playTime",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_Event_songId",
            "unique": false,
            "columnNames": [
              "songId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Event_songId` ON `${TABLE_NAME}` (`songId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Song",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "songId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "Lyrics",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`songId` TEXT NOT NULL, `fixed` TEXT, `synced` TEXT, PRIMARY KEY(`songId`), FOREIGN KEY(`songId`) REFERENCES `Song`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "songId",
            "columnName": "songId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fixed",
            "columnName": "fixed",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "synced",
            "columnName": "synced",
            "affinity": "TEXT"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "songId"
          ]
        },
        "foreignKeys": [
          {
            "table": "Song",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "songId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "pending_bug_reports",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`localId` TEXT NOT NULL, `reportData` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `retryCount` INTEGER NOT NULL, PRIMARY KEY(`localId`))",
        "fields": [
          {
            "fieldPath": "localId",
            "columnName": "localId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "reportData",
            "columnName": "reportData",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "retryCount",
            "columnName": "retryCount",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "localId"
          ]
        }
      },
      {
        "tableName": "pending_feedback",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`localId` TEXT NOT NULL, `feedbackData` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `retryCount` INTEGER NOT NULL, PRIMARY KEY(`localId`))",
        "fields": [
          {
            "fieldPath": "localId",
            "columnName": "localId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "feedbackData",
            "columnName": "feedbackData",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "retryCount",
            "columnName": "retryCount",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "localId"
          ]
        }
      }
    ],
    "views": [
      {
        "viewName": "SortedSongPlaylistMap",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT * FROM SongPlaylistMap ORDER BY position"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '92bdf4eea1b65073169f7a37657fd330')"
    ]
  }
}